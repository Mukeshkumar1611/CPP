// N Queen Problem

#include<iostream>
using namespace std;

bool checkValadity(int **arr, int size, int index, int j)
{
    for(int k=0;k<size;k++)
    {
        if(arr[k][j] == 1)
        {
            return false;
        }
    }
    
    int m = index;
    int n = j;
    
    while(m >= 0 and n >= 0)
    {
        if(arr[m][n] == 1)
        {
           	return false;
        }
        m--;
        n--;
    }
    
    m = index;
    n = j;
    
    while(m >= 0 and n < size)
    {
        if(arr[m][n] == 1)
        {
           	return false;
        }
        m--;
        n++;
    }
    return true;
}

void printQueen(int **arr, int n, int index)
{
    if(index == n)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cout << arr[i][j] << " ";
            }
        }
        cout << endl;
        return;
    }
    
    for(int j=0;j<n;j++)
    {
        if(checkValadity(arr, n , index, j))
        {
            arr[index][j] = 1;
            printQueen(arr, n , index + 1);
            arr[index][j] = 0;
        }
    }
    return;
}

int main(){
    int n;
    cin >> n;
    int **arr = new int*[n];
    for(int i=0;i<n;i++)
    {
        arr[i] = new int[n];
        for(int j=0;j<n;j++)
        {
            arr[i][j] = 0;
        }
    }
    printQueen(arr, n, 0);
    return 0;
}
