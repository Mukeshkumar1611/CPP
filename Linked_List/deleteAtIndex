// Delete Node

#include <iostream>
using namespace std;

class Node
{
public:
    int data;
    Node *next;

    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};

Node *takeInput()
{
    int data;
    cin >> data;
    Node *head = NULL;
    Node *tail = NULL;
    while (data != -1)
    {
        Node *newNode = new Node(data);
        if (head == NULL)
        {
            head = newNode;
            tail = newNode;
        }
        else
        {
            tail->next = newNode;
            tail = newNode;
        }
        cin >> data;
    }
    return head;
}

Node *deleteNode(Node *head, int pos)
{
    if (head == NULL)
    {
        return head;
    }
    if (pos == 0)
    {
        return head->next;
    }

    Node *temp = head;
    int count = 0;
    while (temp != NULL && count < pos - 1)
    {
        ++count;
        temp = temp->next;
    }

    if (temp == NULL || temp->next == NULL)
    {
        return head;
    }
    temp->next = temp->next->next;
    return head;
}

void printList(Node *head)
{
    while (head != NULL)
    {
        cout << head->data << " ";
        head = head->next;
    }
}

int main()
{
    cout << "Enter nodes : ";
    Node *head = takeInput();
    int pos;
    cout << "Enter index to delete node : ";
    cin >> pos;
    deleteNode(head, pos);
    cout << "Updated list : ";
    printList(head);
    return 0;
}
