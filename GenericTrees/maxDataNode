// Max data node

#include <iostream>
#include <vector>
#include <queue>
using namespace std;

template <typename T>
class TreeNode
{
public:
    T data;
    vector<TreeNode<int> *> children;

    TreeNode(T data)
    {
        this->data = data;
    }
};


TreeNode<int> *takeInput()
{
    int rootData;
    cout << "Enter root data " << endl;
    cin >> rootData;
    TreeNode<int> *root = new TreeNode<int>(rootData);
    queue<TreeNode<int> *> pendingNodes;
    pendingNodes.push(root);

    while (pendingNodes.size() != 0)
    {
        TreeNode<int> *front = pendingNodes.front();
        pendingNodes.pop();
        int children;
        cout << "Enter number of children of " << front->data << endl;
        cin >> children;

        for (int i = 0; i < children; i++)
        {
            int childData;
            cout << "Enter data of " << i << "th child of " << front->data << endl;
            cin >> childData;
            TreeNode<int> *child = new TreeNode<int>(childData);
            front->children.push_back(child);
            pendingNodes.push(child);
        }
    }
    return root;
}

TreeNode<int> *maxDataNode(TreeNode<int> *root)
{
    if (root == NULL)
    {
        return root;
    }

    TreeNode<int> *max = root;
    for (int i = 0; i < root->children.size(); i++)
    {
        TreeNode<int> *maxNode = maxDataNode(root->children[i]);
        if (maxNode->data > max->data)
        {
            max = maxNode;
        }
    }
    return max;
}

int main()
{
    TreeNode<int> *root = takeInput();
    TreeNode<int> *maxi = maxDataNode(root);
    cout << "Max data node : " << maxi->data << endl;
    return 0;
}
