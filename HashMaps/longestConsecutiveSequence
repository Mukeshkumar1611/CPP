// Longest Consecutive Sequence

#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

vector<int> longestConsecutiveIncreasingSequence(int *arr, int n)
{
    unordered_map<int, int> freq;
    for (int i = 0; i < n; i++)
    {
        freq[arr[i]]++;
    }
    int i = 0;
    int maxValue = 0;
    int maxFreq = 0;

    while (i < n)
    {
        int j = arr[i] + 1;
        while (freq.count(j) == true)
        {
            freq[arr[i]]++;
            j++;
        }
        if (freq[arr[i]] > maxFreq)
        {
            maxFreq = freq[arr[i]];
            maxValue = arr[i];
        }
        i++;
    }
    vector<int> ans;
    ans.push_back(maxValue);
    if (maxFreq > 1)
    {
        ans.push_back(maxValue + maxFreq - 1);
    }
    return ans;
}

int main()
{
    int size;
    cout << "Enter size oof array : ";
    cin >> size;

    int *arr = new int[size];
    cout << "Enter elements : ";
    for (int i = 0; i < size; i++)
    {
        cin >> arr[i];
    }

    vector<int> ans = longestConsecutiveIncreasingSequence(arr, size);

    for (auto i = ans.begin(); i != ans.end(); ++i)
        cout << *i << " ";

    delete[] arr;
}
